/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BytesLike,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Raffle, RaffleInterface } from "../Raffle";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "entranceFee",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "vrfCoordinator",
        type: "address",
        internalType: "address",
      },
      {
        name: "gasLane",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "subscriptionId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "callbackGasLimit",
        type: "uint32",
        internalType: "uint32",
      },
      {
        name: "maxAmountOfPlayers",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "acceptOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "checkUpkeep",
    inputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "upkeepNeeded",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "enterRaffle",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "getEntranceFee",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getMaxPlayers",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getPlayersCount",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRaffleState",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "enum Raffle.RaffleState",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "performUpkeep",
    inputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "rawFulfillRandomWords",
    inputs: [
      {
        name: "requestId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "randomWords",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "s_vrfCoordinator",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IVRFCoordinatorV2Plus",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setCoordinator",
    inputs: [
      {
        name: "_vrfCoordinator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "CoordinatorSet",
    inputs: [
      {
        name: "vrfCoordinator",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferRequested",
    inputs: [
      {
        name: "from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RaffleEntered",
    inputs: [
      {
        name: "player",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "WaitingForMorePlayers",
    inputs: [
      {
        name: "currentPlayers",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "maxPlayers",
        type: "uint8",
        indexed: false,
        internalType: "uint8",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "WinnerPicked",
    inputs: [
      {
        name: "winner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "OnlyCoordinatorCanFulfill",
    inputs: [
      {
        name: "have",
        type: "address",
        internalType: "address",
      },
      {
        name: "want",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "OnlyOwnerOrCoordinator",
    inputs: [
      {
        name: "have",
        type: "address",
        internalType: "address",
      },
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "coordinator",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "Raffle__NotEnoughETHEntered",
    inputs: [],
  },
  {
    type: "error",
    name: "Raffle__RaffleIsFull",
    inputs: [],
  },
  {
    type: "error",
    name: "Raffle__RaffleNotOpen",
    inputs: [],
  },
  {
    type: "error",
    name: "Raffle__TransferFailed",
    inputs: [],
  },
  {
    type: "error",
    name: "Raffle__upkeepNotNeeded",
    inputs: [
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "playersLength",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "raffleState",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "ZeroAddress",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x610100604052348015610010575f5ffd5b506040516122c23803806122c2833981810160405281019061003291906104a8565b8433805f5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036100a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161009b9061058b565b60405180910390fd5b815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610126576101258161024a60201b60201c565b5b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361018e576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505085608081815250508360a081815250508260c081815250508163ffffffff1660e08163ffffffff16815250505f600460156101000a81548160ff021916908360018111156102205761021f6105a9565b5b02179055508060045f6101000a81548160ff021916908360ff16021790555050505050505061063e565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036102b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102af90610620565b60405180910390fd5b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff165f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b5f5ffd5b5f819050919050565b61038b81610379565b8114610395575f5ffd5b50565b5f815190506103a681610382565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6103d5826103ac565b9050919050565b6103e5816103cb565b81146103ef575f5ffd5b50565b5f81519050610400816103dc565b92915050565b5f819050919050565b61041881610406565b8114610422575f5ffd5b50565b5f815190506104338161040f565b92915050565b5f63ffffffff82169050919050565b61045181610439565b811461045b575f5ffd5b50565b5f8151905061046c81610448565b92915050565b5f60ff82169050919050565b61048781610472565b8114610491575f5ffd5b50565b5f815190506104a28161047e565b92915050565b5f5f5f5f5f5f60c087890312156104c2576104c1610375565b5b5f6104cf89828a01610398565b96505060206104e089828a016103f2565b95505060406104f189828a01610425565b945050606061050289828a01610398565b935050608061051389828a0161045e565b92505060a061052489828a01610494565b9150509295509295509295565b5f82825260208201905092915050565b7f43616e6e6f7420736574206f776e657220746f207a65726f00000000000000005f82015250565b5f610575601883610531565b915061058082610541565b602082019050919050565b5f6020820190508181035f8301526105a281610569565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b7f43616e6e6f74207472616e7366657220746f2073656c660000000000000000005f82015250565b5f61060a601783610531565b9150610615826105d6565b602082019050919050565b5f6020820190508181035f830152610637816105fe565b9050919050565b60805160a05160c05160e051611c4a6106785f395f6106fb01525f6106ca01525f6106a401525f81816102c101526103c10152611c4a5ff3fe6080604052600436106100c1575f3560e01c806379ba50971161007e5780638ea98117116100585780638ea981171461021a5780639eccacf614610242578063a76594bf1461026c578063f2fde38b14610296576100c1565b806379ba5097146101b05780638cbd9eb8146101c65780638da5cb5b146101f0576100c1565b806309bc33a7146100c5578063115cbaf5146100ef5780631fe543e3146101195780632cfcc539146101415780634585e33b1461014b5780636e04ff0d14610173575b5f5ffd5b3480156100d0575f5ffd5b506100d96102be565b6040516100e691906111bf565b60405180910390f35b3480156100fa575f5ffd5b506101036102e5565b604051610110919061124b565b60405180910390f35b348015610124575f5ffd5b5061013f600480360381019061013a9190611300565b6102fb565b005b6101496103bf565b005b348015610156575f5ffd5b50610171600480360381019061016c91906113b2565b6105e4565b005b34801561017e575f5ffd5b5061019960048036038101906101949190611535565b6107f4565b6040516101a79291906115f6565b60405180910390f35b3480156101bb575f5ffd5b506101c4610883565b005b3480156101d1575f5ffd5b506101da610a12565b6040516101e7919061163f565b60405180910390f35b3480156101fb575f5ffd5b50610204610a27565b6040516102119190611697565b60405180910390f35b348015610225575f5ffd5b50610240600480360381019061023b91906116da565b610a4e565b005b34801561024d575f5ffd5b50610256610c2b565b6040516102639190611760565b60405180910390f35b348015610277575f5ffd5b50610280610c50565b60405161028d91906111bf565b60405180910390f35b3480156102a1575f5ffd5b506102bc60048036038101906102b791906116da565b610c5c565b005b5f7f0000000000000000000000000000000000000000000000000000000000000000905090565b5f600460159054906101000a900460ff16905090565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103af573360025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040517f1cf993f40000000000000000000000000000000000000000000000000000000081526004016103a6929190611779565b60405180910390fd5b6103ba838383610c70565b505050565b7f0000000000000000000000000000000000000000000000000000000000000000341015610419576040517fbd4e069500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f600181111561042c5761042b6111d8565b5b600460159054906101000a900460ff16600181111561044e5761044d6111d8565b5b14610485576040517fd24a271400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60045f9054906101000a900460ff1660ff16600380549050106104d4576040517f23c8d0bb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600333908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f634f3211e3a4e43fee5a21ad9f87ca153b300fc78b1c557a2057dbe9c63bcb4760405160405180910390a260045f9054906101000a900460ff1660ff1660038054905010156105e2577f4575f0c614ec5caf3d19f8963d407ccd01851158c3d320a7a4b466efd417ab7360038054905060045f9054906101000a900460ff166040516105d99291906117a0565b60405180910390a15b565b5f6105fc60405180602001604052805f8152506107f4565b5090508061066b5747600380549050600460159054906101000a900460ff16600181111561062d5761062c6111d8565b5b6040517f837325cd000000000000000000000000000000000000000000000000000000008152600401610662939291906117c7565b60405180910390fd5b6001600460156101000a81548160ff02191690836001811115610691576106906111d8565b5b02179055505f6040518060c001604052807f000000000000000000000000000000000000000000000000000000000000000081526020017f00000000000000000000000000000000000000000000000000000000000000008152602001600361ffff1681526020017f000000000000000000000000000000000000000000000000000000000000000063ffffffff168152602001600163ffffffff16815260200161074b60405180602001604052805f1515815250610eb2565b81525090505f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639b1c385e836040518263ffffffff1660e01b81526004016107ab919061192b565b6020604051808303815f875af11580156107c7573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107eb919061195f565b90505050505050565b5f60605f5f600181111561080b5761080a6111d8565b5b600460159054906101000a900460ff16600181111561082d5761082c6111d8565b5b1490505f5f471190505f60045f9054906101000a900460ff1660ff1660038054905014905082801561085c5750815b80156108655750805b94508460405180602001604052805f81525094509450505050915091565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610912576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610909906119e4565b60405180910390fd5b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050335f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f60015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b5f60045f9054906101000a900460ff16905090565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610a56610a27565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614158015610ade575060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b15610b4c5733610aec610a27565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040517f061db9c1000000000000000000000000000000000000000000000000000000008152600401610b4393929190611a02565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610bb1576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fd1a6a14209a385a964d036e404cb5cfb71f4000cdb03c9366292430787261be681604051610c209190611697565b60405180910390a150565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f600380549050905090565b610c64610f4a565b610c6d81610fda565b50565b5f60038054905083835f818110610c8a57610c89611a37565b5b90506020020135610c9b9190611a91565b90505f60038281548110610cb257610cb1611a37565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905080600460016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f600460156101000a81548160ff02191690836001811115610d4257610d416111d8565b5b02179055505f67ffffffffffffffff811115610d6157610d60611411565b5b604051908082528060200260200182016040528015610d8f5781602001602082028036833780820191505090505b5060039080519060200190610da5929190611105565b505f8173ffffffffffffffffffffffffffffffffffffffff1647604051610dcb90611aee565b5f6040518083038185875af1925050503d805f8114610e05576040519150601f19603f3d011682016040523d82523d5f602084013e610e0a565b606091505b5050905080610e45576040517fa1d04b3900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600460019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f5b690ec4a06fe979403046eaeea5b3ce38524683c3001f662c8b5a829632f7df60405160405180910390a2505050505050565b60607f92fd13387c7fe7befbc38d303d6468778fb9731bc4583f17d92989c6fcfdeaaa82604051602401610ee69190611b2b565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050919050565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610fd8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fcf90611b8e565b60405180910390fd5b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611048576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103f90611bf6565b60405180910390fd5b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff165f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b828054828255905f5260205f2090810192821561117b579160200282015b8281111561117a578251825f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190611123565b5b509050611188919061118c565b5090565b5b808211156111a3575f815f90555060010161118d565b5090565b5f819050919050565b6111b9816111a7565b82525050565b5f6020820190506111d25f8301846111b0565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b60028110611216576112156111d8565b5b50565b5f81905061122682611205565b919050565b5f61123582611219565b9050919050565b6112458161122b565b82525050565b5f60208201905061125e5f83018461123c565b92915050565b5f604051905090565b5f5ffd5b5f5ffd5b61127e816111a7565b8114611288575f5ffd5b50565b5f8135905061129981611275565b92915050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f8401126112c0576112bf61129f565b5b8235905067ffffffffffffffff8111156112dd576112dc6112a3565b5b6020830191508360208202830111156112f9576112f86112a7565b5b9250929050565b5f5f5f604084860312156113175761131661126d565b5b5f6113248682870161128b565b935050602084013567ffffffffffffffff81111561134557611344611271565b5b611351868287016112ab565b92509250509250925092565b5f5f83601f8401126113725761137161129f565b5b8235905067ffffffffffffffff81111561138f5761138e6112a3565b5b6020830191508360018202830111156113ab576113aa6112a7565b5b9250929050565b5f5f602083850312156113c8576113c761126d565b5b5f83013567ffffffffffffffff8111156113e5576113e4611271565b5b6113f18582860161135d565b92509250509250929050565b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61144782611401565b810181811067ffffffffffffffff8211171561146657611465611411565b5b80604052505050565b5f611478611264565b9050611484828261143e565b919050565b5f67ffffffffffffffff8211156114a3576114a2611411565b5b6114ac82611401565b9050602081019050919050565b828183375f83830152505050565b5f6114d96114d484611489565b61146f565b9050828152602081018484840111156114f5576114f46113fd565b5b6115008482856114b9565b509392505050565b5f82601f83011261151c5761151b61129f565b5b813561152c8482602086016114c7565b91505092915050565b5f6020828403121561154a5761154961126d565b5b5f82013567ffffffffffffffff81111561156757611566611271565b5b61157384828501611508565b91505092915050565b5f8115159050919050565b6115908161157c565b82525050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f6115c882611596565b6115d281856115a0565b93506115e28185602086016115b0565b6115eb81611401565b840191505092915050565b5f6040820190506116095f830185611587565b818103602083015261161b81846115be565b90509392505050565b5f60ff82169050919050565b61163981611624565b82525050565b5f6020820190506116525f830184611630565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61168182611658565b9050919050565b61169181611677565b82525050565b5f6020820190506116aa5f830184611688565b92915050565b6116b981611677565b81146116c3575f5ffd5b50565b5f813590506116d4816116b0565b92915050565b5f602082840312156116ef576116ee61126d565b5b5f6116fc848285016116c6565b91505092915050565b5f819050919050565b5f61172861172361171e84611658565b611705565b611658565b9050919050565b5f6117398261170e565b9050919050565b5f61174a8261172f565b9050919050565b61175a81611740565b82525050565b5f6020820190506117735f830184611751565b92915050565b5f60408201905061178c5f830185611688565b6117996020830184611688565b9392505050565b5f6040820190506117b35f8301856111b0565b6117c06020830184611630565b9392505050565b5f6060820190506117da5f8301866111b0565b6117e760208301856111b0565b6117f460408301846111b0565b949350505050565b5f819050919050565b61180e816117fc565b82525050565b61181d816111a7565b82525050565b5f61ffff82169050919050565b61183981611823565b82525050565b5f63ffffffff82169050919050565b6118578161183f565b82525050565b5f82825260208201905092915050565b5f61187782611596565b611881818561185d565b93506118918185602086016115b0565b61189a81611401565b840191505092915050565b5f60c083015f8301516118ba5f860182611805565b5060208301516118cd6020860182611814565b5060408301516118e06040860182611830565b5060608301516118f3606086018261184e565b506080830151611906608086018261184e565b5060a083015184820360a086015261191e828261186d565b9150508091505092915050565b5f6020820190508181035f83015261194381846118a5565b905092915050565b5f8151905061195981611275565b92915050565b5f602082840312156119745761197361126d565b5b5f6119818482850161194b565b91505092915050565b5f82825260208201905092915050565b7f4d7573742062652070726f706f736564206f776e6572000000000000000000005f82015250565b5f6119ce60168361198a565b91506119d98261199a565b602082019050919050565b5f6020820190508181035f8301526119fb816119c2565b9050919050565b5f606082019050611a155f830186611688565b611a226020830185611688565b611a2f6040830184611688565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611a9b826111a7565b9150611aa6836111a7565b925082611ab657611ab5611a64565b5b828206905092915050565b5f81905092915050565b50565b5f611ad95f83611ac1565b9150611ae482611acb565b5f82019050919050565b5f611af882611ace565b9150819050919050565b611b0b8161157c565b82525050565b602082015f820151611b255f850182611b02565b50505050565b5f602082019050611b3e5f830184611b11565b92915050565b7f4f6e6c792063616c6c61626c65206279206f776e6572000000000000000000005f82015250565b5f611b7860168361198a565b9150611b8382611b44565b602082019050919050565b5f6020820190508181035f830152611ba581611b6c565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c660000000000000000005f82015250565b5f611be060178361198a565b9150611beb82611bac565b602082019050919050565b5f6020820190508181035f830152611c0d81611bd4565b905091905056fea264697066735822122007a03dcdd8a67bc16435f94a453b58b631bffffb8abc57f4310746eea5efaa7c64736f6c634300081e0033";

type RaffleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RaffleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Raffle__factory extends ContractFactory {
  constructor(...args: RaffleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    entranceFee: BigNumberish,
    vrfCoordinator: AddressLike,
    gasLane: BytesLike,
    subscriptionId: BigNumberish,
    callbackGasLimit: BigNumberish,
    maxAmountOfPlayers: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      entranceFee,
      vrfCoordinator,
      gasLane,
      subscriptionId,
      callbackGasLimit,
      maxAmountOfPlayers,
      overrides || {}
    );
  }
  override deploy(
    entranceFee: BigNumberish,
    vrfCoordinator: AddressLike,
    gasLane: BytesLike,
    subscriptionId: BigNumberish,
    callbackGasLimit: BigNumberish,
    maxAmountOfPlayers: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      entranceFee,
      vrfCoordinator,
      gasLane,
      subscriptionId,
      callbackGasLimit,
      maxAmountOfPlayers,
      overrides || {}
    ) as Promise<
      Raffle & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Raffle__factory {
    return super.connect(runner) as Raffle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RaffleInterface {
    return new Interface(_abi) as RaffleInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Raffle {
    return new Contract(address, _abi, runner) as unknown as Raffle;
  }
}
